name: Build docs

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Virtualenv cache
        uses: syphar/restore-virtualenv@v1.1
        id: cache-virtualenv-docs
        with:
          custom_cache_key_element: docs

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        with:
          custom_cache_key_element: docs

      - name: Install poetry
        env:
          POETRY_VERSION: 1.1.4
        run: |
          pip install pip==20.3.1 setuptools==50.3.2
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          source $HOME/.poetry/env
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction -E dev_test -E dev_doc

      - name: Build and publish docs
        run: make docs

      - name: Zip docs
        run: bash ./scripts/zip-docs.sh

      - uses: actions/upload-artifact@v2
        with:
          name: docs-zip
          path: ./docs.zip

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './site'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
